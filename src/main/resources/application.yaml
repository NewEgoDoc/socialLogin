spring:
  session:
    jdbc:
      initialize-schema: always
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url:
    username:
    password:
  jpa:
    hibernate:
      ddl-auto: create #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: xxx
            client-secret: xxx
            scope:
              - email
              - profile
          naver:
            client-id: xxx
            client-secret: xxx
            scope:
              - name
              - email
            #- profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8880/login/oauth2/code/naver #코드를 받는 uri(naver 의 콜백 uri)

          kakao:
            client-name: Kakao
            client-id: xxxx
            client-secret: xxxx
            client-authentication-method: POST
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - profile_image
              - account_email

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize #네이버 로그인 창을 받을수 있다
            token-uri: https://nid.naver.com/oauth2.0/token #토큰을 받는 uri
            user-info-uri: https://openapi.naver.com/v1/nid/me #프로필 주소를 받는 uri
            user-name-attribute: response #회원 벙보를 json 형태로 받는데 response 라는 키값으로 네이버가 리턴해줌
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: kakao_account

